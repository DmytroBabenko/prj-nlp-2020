1. Data

1.1 There are many ways in which factivity can be realized; I will focus specifically on factive verbs, which are verbs that take a clause as a complement and introduce a presupposition that the complement clause is true. 

I'll search for certain syntactic patterns that are likely to yield a factive verb. For example,
• VBZ/have VBN/reported IN/that
• VBZ/have VBN/noticed IN/that
• VBZ/have VBN/suggested IN/that 
• VBZ/have VBN/concluded IN/that

• NN/industry MD/should VB/recognise IN/that/
• NP/Microsoft MD/should/ VB/acknowledge IN/that/ 
• NN/paragraph/ MD/should/ VB/be IN/that/
• NN/evidence MD/should/ VB/show IN/that/


- Factive Verbs
accept, acknowledge, care, discover, figure out, find out, forget, grasp, is amazed, is aware, is bothered, is informed, is shocked, is surprised, know, mind, notice, realize, recognize, regret, remember, resent, reveal, see, spot, take into account, take into consideration

- Non-Factive Verbs
allege, assume, believe, claim, decide, estimate, expect, feel, figure, guess, hope, hypothesize, imagine, infer, is sure, postulate, predict, presume, reckon, sense, speculate, suggest, suppose, suspect, theorize, think, trust


Factive & Non Factive Verbs are taken from the article "What we know about knowing: Presuppositions generated by factive verbs
influence downstream neural processing". They state that:

"Our findings suggest that, during active discourse comprehension, factive verbs trigger presuppositions that are encoded and maintained within the comprehender’s discourse model. When downstream input violates these presuppositions, it conflicts with this prior model, pro- ducing a larger late posterior positivity/P600. More generally, our re- sults add to a growing body of evidence that the brain is able to quickly draw upon the rich semantic properties encoded in single words or phrases to compute and encode information within a mental model, even when such information is tangential (“not at issue”) to the central message being conveyed by the discourse."


1.2 Data Sets

New York Times Comments - https://www.kaggle.com/aashita/nyt-comments 
Also, I'll try this package to get more data - https://github.com/AashitaK/nyt-comments

(A python package that retrieves comments from the New York Times articles customized with respect to timeline and queries and return the comments' and articles' data as pandas dataframes with an option to store it as csv files.)

(The data contains information about the comments made on the articles published in New York Times in Jan-May 2017 and Jan-April 2018. The month-wise data is given in two csv files - one each for the articles on which comments were made and for the comments themselves. The csv files for comments contain over 2 million comments in total with 34 features and those for articles contain 16 features about more than 9,000 articles.)

Article Features:
articleText, byline, headline, documentType, typeOfMaterial, section name, commentCount

Comment Features:
commentBody, reader picks, commentTitle, commentType, editorsSelection, newDesk, recommendations